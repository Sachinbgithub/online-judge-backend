### Test Submit Whole Test API with Score Parameter
### This file contains HTTP requests to test the submit-whole-test API with the new score parameter

### 1. Submit whole test with custom scores for each question
POST {{host}}/api/CodingTest/submit-whole-test
Content-Type: application/json

{
  "userId": 40115,
  "codingTestId": 1000019,
  "attemptNumber": 1,
  "totalTimeSpentMinutes": 120,
  "isLateSubmission": false,
  "classId": 1,
  "questionSubmissions": [
    {
      "problemId": 6,
      "languageUsed": "python",
      "finalCodeSnapshot": "def twoSum(nums, target):\n    hashmap = {}\n    for i, num in enumerate(nums):\n        complement = target - num\n        if complement in hashmap:\n            return [hashmap[complement], i]\n        hashmap[num] = i\n    return []",
      "totalTestCases": 5,
      "passedTestCases": 5,
      "failedTestCases": 0,
      "score": 30,
      "requestedHelp": false,
      "languageSwitchCount": 0,
      "runClickCount": 3,
      "submitClickCount": 1,
      "eraseCount": 0,
      "saveCount": 2,
      "loginLogoutCount": 0,
      "isSessionAbandoned": false,
      "testCaseResults": [
        {
          "testCaseId": 1,
          "testCaseOrder": 1,
          "input": "[2,7,11,15], 9",
          "expectedOutput": "[0,1]",
          "actualOutput": "[0,1]",
          "isPassed": true,
          "executionTimeMs": 5,
          "memoryUsedKB": 256,
          "errorMessage": null,
          "errorType": null
        },
        {
          "testCaseId": 2,
          "testCaseOrder": 2,
          "input": "[3,2,4], 6",
          "expectedOutput": "[1,2]",
          "actualOutput": "[1,2]",
          "isPassed": true,
          "executionTimeMs": 4,
          "memoryUsedKB": 240,
          "errorMessage": null,
          "errorType": null
        }
      ]
    },
    {
      "problemId": 7,
      "languageUsed": "python",
      "finalCodeSnapshot": "def addTwoNumbers(l1, l2):\n    dummy = ListNode(0)\n    current = dummy\n    carry = 0\n    \n    while l1 or l2 or carry:\n        val1 = l1.val if l1 else 0\n        val2 = l2.val if l2 else 0\n        total = val1 + val2 + carry\n        carry = total // 10\n        current.next = ListNode(total % 10)\n        current = current.next\n        l1 = l1.next if l1 else None\n        l2 = l2.next if l2 else None\n    \n    return dummy.next",
      "totalTestCases": 4,
      "passedTestCases": 3,
      "failedTestCases": 1,
      "score": 20,
      "requestedHelp": false,
      "languageSwitchCount": 0,
      "runClickCount": 5,
      "submitClickCount": 2,
      "eraseCount": 1,
      "saveCount": 3,
      "loginLogoutCount": 0,
      "isSessionAbandoned": false,
      "testCaseResults": [
        {
          "testCaseId": 3,
          "testCaseOrder": 1,
          "input": "[2,4,3], [5,6,4]",
          "expectedOutput": "[7,0,8]",
          "actualOutput": "[7,0,8]",
          "isPassed": true,
          "executionTimeMs": 8,
          "memoryUsedKB": 320,
          "errorMessage": null,
          "errorType": null
        },
        {
          "testCaseId": 4,
          "testCaseOrder": 2,
          "input": "[0], [0]",
          "expectedOutput": "[0]",
          "actualOutput": "[0]",
          "isPassed": true,
          "executionTimeMs": 3,
          "memoryUsedKB": 200,
          "errorMessage": null,
          "errorType": null
        }
      ]
    }
  ]
}

### 2. Submit whole test without custom scores (will use automatic calculation)
POST {{host}}/api/CodingTest/submit-whole-test
Content-Type: application/json

{
  "userId": 40115,
  "codingTestId": 1000019,
  "attemptNumber": 2,
  "totalTimeSpentMinutes": 90,
  "isLateSubmission": false,
  "classId": 1,
  "questionSubmissions": [
    {
      "problemId": 6,
      "languageUsed": "python",
      "finalCodeSnapshot": "def twoSum(nums, target):\n    for i in range(len(nums)):\n        for j in range(i + 1, len(nums)):\n            if nums[i] + nums[j] == target:\n                return [i, j]\n    return []",
      "totalTestCases": 5,
      "passedTestCases": 4,
      "failedTestCases": 1,
      "score": 0,
      "requestedHelp": false,
      "languageSwitchCount": 0,
      "runClickCount": 2,
      "submitClickCount": 1,
      "eraseCount": 0,
      "saveCount": 1,
      "loginLogoutCount": 0,
      "isSessionAbandoned": false,
      "testCaseResults": [
        {
          "testCaseId": 1,
          "testCaseOrder": 1,
          "input": "[2,7,11,15], 9",
          "expectedOutput": "[0,1]",
          "actualOutput": "[0,1]",
          "isPassed": true,
          "executionTimeMs": 12,
          "memoryUsedKB": 280,
          "errorMessage": null,
          "errorType": null
        }
      ]
    }
  ]
}

### 3. Submit with mixed scoring (some custom, some automatic)
POST {{host}}/api/CodingTest/submit-whole-test
Content-Type: application/json

{
  "userId": 40115,
  "codingTestId": 1000019,
  "attemptNumber": 3,
  "totalTimeSpentMinutes": 150,
  "isLateSubmission": true,
  "classId": 1,
  "questionSubmissions": [
    {
      "problemId": 6,
      "languageUsed": "python",
      "finalCodeSnapshot": "def twoSum(nums, target):\n    # Custom implementation\n    return [0, 1]",
      "totalTestCases": 5,
      "passedTestCases": 2,
      "failedTestCases": 3,
      "score": 15,
      "requestedHelp": true,
      "languageSwitchCount": 1,
      "runClickCount": 8,
      "submitClickCount": 3,
      "eraseCount": 2,
      "saveCount": 5,
      "loginLogoutCount": 0,
      "isSessionAbandoned": false,
      "testCaseResults": []
    },
    {
      "problemId": 7,
      "languageUsed": "python",
      "finalCodeSnapshot": "def addTwoNumbers(l1, l2):\n    # Let the system calculate score automatically\n    pass",
      "totalTestCases": 4,
      "passedTestCases": 4,
      "failedTestCases": 0,
      "score": 0,
      "requestedHelp": false,
      "languageSwitchCount": 0,
      "runClickCount": 2,
      "submitClickCount": 1,
      "eraseCount": 0,
      "saveCount": 1,
      "loginLogoutCount": 0,
      "isSessionAbandoned": false,
      "testCaseResults": []
    }
  ]
}

### Expected Response Structure:
### {
###   "submissionId": 12345,
###   "codingTestId": 1000019,
###   "testName": "Advanced Programming Test",
###   "userId": 40115,
###   "attemptNumber": 1,
###   "totalQuestions": 2,
###   "totalScore": 50,
###   "maxScore": 60,
###   "percentage": 83.33,
###   "isLateSubmission": false,
###   "submissionTime": "2024-01-01T10:30:00Z",
###   "questionSubmissions": [
###     {
###       "problemId": 6,
###       "problemTitle": "Two Sum",
###       "score": 30,
###       "maxScore": 30,
###       "isCorrect": true,
###       "totalTestCases": 5,
###       "passedTestCases": 5,
###       "failedTestCases": 0
###     },
###     {
###       "problemId": 7,
###       "problemTitle": "Add Two Numbers",
###       "score": 20,
###       "maxScore": 30,
###       "isCorrect": false,
###       "totalTestCases": 4,
###       "passedTestCases": 3,
###       "failedTestCases": 1
###     }
###   ],
###   "createdAt": "2024-01-01T10:30:00Z"
### }

### Variables (set these in your environment or replace with actual values)
@host = https://localhost:7001
